// Mocks generated by Mockito 5.0.17 from annotations
// in flutter_test_project/test/sign_in_view_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_test_project/model/User.dart' as _i4;
import 'package:flutter_test_project/repositories/repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i2.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.User?> getUserFromPref(String? username) =>
      (super.noSuchMethod(Invocation.method(#getUserFromPref, [username]),
          returnValue: Future<_i4.User?>.value()) as _i3.Future<_i4.User?>);
  @override
  _i3.Future<bool> isUsernameExist(String? username) =>
      (super.noSuchMethod(Invocation.method(#isUsernameExist, [username]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<void> saveUserToPref(_i4.User? user) =>
      (super.noSuchMethod(Invocation.method(#saveUserToPref, [user]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
